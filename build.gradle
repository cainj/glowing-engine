plugins {
	id 'org.springframework.boot' version '2.2.0.M1'
	id 'org.jetbrains.kotlin.jvm' version '1.3.21'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'
	id "io.gitlab.arturbosch.detekt" version '1.0.0-RC14'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-kapt'
apply from: 'detekt.gradle'
apply from: 'jacoco.gradle'
apply plugin: 'idea'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true

        def kaptMain = file('build/generated/source/kapt/main')
        sourceDirs += kaptMain
        generatedSourceDirs += kaptMain
    }
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    compile 'com.expedia:graphql-kotlin:0.2.8'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '6.4.2'
    compile "com.querydsl:querydsl-jpa:4.2.1"
    compile 'com.h2database:h2:1.4.197'
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testCompile("org.junit.jupiter:junit-jupiter-engine")
    testCompile 'org.junit.vintage:junit-vintage-engine:5.3.1'

    testCompile group: 'com.thedeanda', name: 'lorem', version: '2.1'
    kapt 'com.querydsl:querydsl-apt:4.2.1:jpa'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = sourceCompatibility
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = sourceCompatibility
	}
}

test {
    useJUnitPlatform {
        excludeTags 'smoke'
        testLogging {
            //uncomment to see the entire stream
            //showStandardStreams = true
            events "FAILED", "SKIPPED"
            includeEngines 'junit-jupiter', 'junit-vintage'
            exceptionFormat = 'full'
        }
    }
    failFast = false
}
